{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pvnl0\\\\Desktop\\\\Cuvette\\\\Quiz App\\\\quiz-app-frontend\\\\src\\\\components\\\\LiveQuizInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport CompletedQuiz from \"./CompletedQuiz\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LiveQuizInterface() {\n  _s();\n  const {\n    quizId\n  } = useParams();\n  const [quiz, setQuiz] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const [timer, setTimer] = useState(null);\n  const [timerActive, setTimerActive] = useState(false);\n  const [correctAnswersCount, setCorrectAnswersCount] = useState(0);\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(null);\n  useEffect(() => {\n    axios.get(`http://localhost:4000/getQuizById/${quizId}`).then(response => {\n      const {\n        quiz\n      } = response.data;\n      setQuiz(quiz);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [quizId]);\n  let impressions = 0;\n  useEffect(() => {\n    axios.patch(`http://localhost:4000/impressionsUpdation/${quizId}`, impressions).then(response => {\n      console.log(response.data.message);\n    }).catch(error => {\n      if (error.response && error.response.data && error.response.data.error) {\n        console.log(error);\n      }\n    });\n  });\n  const handleNextOrSubmitQna = () => {\n    if (quizCompleted) {\n      return;\n    }\n    let peopleAnsweredCorrectly = 0;\n    let peopleAnsweredIncorrectly = 0;\n    if (currentQuestionIndex < quiz.questionsArray.length - 1) {\n      const currentQuestion = quiz.questionsArray[currentQuestionIndex];\n      if (selectedOptionIndex !== null) {\n        if (currentQuestion.correctAnswer === selectedOptionIndex) {\n          if (!timerActive) {\n            setCorrectAnswersCount(prevCount => prevCount + 1);\n            peopleAnsweredCorrectly = 1;\n          } else {\n            peopleAnsweredIncorrectly = 1;\n          }\n        } else {\n          peopleAnsweredIncorrectly = 1;\n        }\n      } else {\n        peopleAnsweredIncorrectly = 1;\n      }\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n    } else {\n      if (selectedOptionIndex !== null) {\n        const currentQuestion = quiz.questionsArray[currentQuestionIndex];\n        if (currentQuestion.correctAnswer === selectedOptionIndex) {\n          if (!timerActive) {\n            setCorrectAnswersCount(prevCount => prevCount + 1);\n            peopleAnsweredCorrectly = 1;\n          } else {\n            peopleAnsweredIncorrectly = 1;\n          }\n        } else {\n          peopleAnsweredIncorrectly = 1;\n        }\n      } else {\n        peopleAnsweredIncorrectly = 1;\n      }\n      setQuizCompleted(true);\n    }\n    setSelectedOptionIndex(null);\n    axios.patch(`http://localhost:4000/questionsUpdation/${quiz._id}/${quiz.questionsArray[currentQuestionIndex]._id}`, {\n      peopleAnsweredCorrectly,\n      peopleAnsweredIncorrectly\n    }).then(response => {\n      console.log(response);\n    }).catch(error => {\n      if (error.response && error.response.data && error.response.data.error) {\n        console.log(error);\n      }\n    });\n  };\n  const handleNextOrSubmitPoll = () => {\n    if (quizCompleted) {\n      return;\n    }\n    let peopleAnsweredOption1 = 0;\n    let peopleAnsweredOption2 = 0;\n    let peopleAnsweredOption3 = 0;\n    let peopleAnsweredOption4 = 0;\n    if (selectedOptionIndex === 0) {\n      peopleAnsweredOption1 = 1;\n    }\n    if (selectedOptionIndex === 1) {\n      peopleAnsweredOption2 = 1;\n    }\n    if (selectedOptionIndex === 2) {\n      peopleAnsweredOption3 = 1;\n    }\n    if (selectedOptionIndex === 3) {\n      peopleAnsweredOption4 = 1;\n    }\n    setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n    axios.patch(`http://localhost:4000/questionsUpdation/${quiz._id}/${quiz.questionsArray[currentQuestionIndex]._id}`, {\n      peopleAnsweredOption1,\n      peopleAnsweredOption2,\n      peopleAnsweredOption3,\n      peopleAnsweredOption4\n    }).then(response => {\n      console.log(response);\n    }).catch(error => {\n      if (error.response && error.response.data && error.response.data.error) {\n        console.log(error);\n      }\n    });\n    setSelectedOptionIndex(null);\n    if (currentQuestionIndex === quiz.questionsArray.length - 1) {\n      setQuizCompleted(true);\n    }\n  };\n  useEffect(() => {\n    const timerInterval = setInterval(() => {\n      setTimer(prevTimer => {\n        if (prevTimer > 0) {\n          return prevTimer - 1;\n        } else {\n          setTimerActive(true);\n          handleNextOrSubmitQna();\n          return 0;\n        }\n      });\n    }, 1000);\n    return () => {\n      clearInterval(timerInterval);\n      setTimerActive(false);\n    };\n    // eslint-disable-next-line\n  }, [timer, currentQuestionIndex, quizCompleted]);\n  useEffect(() => {\n    if (quiz && quiz.questionsArray && quiz.questionsArray.length > 0) {\n      setTimer(quiz.timer === \"5 sec\" ? 5 : quiz.timer === \"10 sec\" ? 10 : quiz.timer === \"OFF\" || quiz.type === \"Poll Type\" ? Infinity : 0);\n    }\n  }, [currentQuestionIndex, quiz]);\n  const handleOptionSelect = index => {\n    setSelectedOptionIndex(index);\n  };\n  if (quizCompleted) {\n    return /*#__PURE__*/_jsxDEV(CompletedQuiz, {\n      type: quiz.type,\n      correctAnswer: correctAnswersCount,\n      totalQuestions: quiz.questionsArray.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      width: \"100vw\",\n      backgroundColor: \"#041325\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"82vh\",\n        width: \"90vw\",\n        backgroundColor: \"#FFFFFF\",\n        margin: \"9vh 5vw\",\n        borderRadius: \"15px\",\n        boxShadow: \"0px 0px 30px 0px #00000026\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: quiz && quiz.questionsArray && quiz.questionsArray.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            marginTop: \"5vh\",\n            justifyContent: \"space-between\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"#474444\",\n              fontWeight: \"600\",\n              fontSize: \"2em\",\n              marginLeft: \"3vw\"\n            },\n            children: [\"0\", currentQuestionIndex + 1, \"/0\", quiz.questionsArray.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), quiz.timer !== \"OFF\" && quiz.type !== \"Poll Type\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"#D60000\",\n              fontWeight: \"600\",\n              fontSize: \"2em\",\n              marginRight: \"3vw\"\n            },\n            children: [\"00:\", timer < 10 ? `0${timer}` : timer, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"2vh\",\n            textAlign: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"#474444\",\n              fontSize: \"2em\",\n              fontWeight: \"600\"\n            },\n            children: quiz.questionsArray[currentQuestionIndex].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            width: \"50vw\",\n            marginLeft: \"20vw\",\n            marginRight: \"20vw\",\n            justifyContent: \"space-between\",\n            marginTop: \"-3vh\"\n          },\n          children: quiz.questionsArray[currentQuestionIndex].optionValues.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => handleOptionSelect(index),\n            style: {\n              border: selectedOptionIndex === index ? \"4px solid #5076FF\" : \"\",\n              backgroundColor: \"#F0F0F0\",\n              height: \"15vh\",\n              width: \"20vw\",\n              marginTop: \"10vh\",\n              fontWeight: \"600\",\n              fontSize: \"1.6em\",\n              textAlign: \"center\",\n              cursor: \"pointer\",\n              borderRadius: \"10px\"\n            },\n            children: [quiz.questionsArray[currentQuestionIndex].optionType === \"Text\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                lineHeight: \"15vh\"\n              },\n              children: [\" \", option.value]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 23\n            }, this), quiz.questionsArray[currentQuestionIndex].optionType === \"ImageUrl\" && /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                width: \"20vw\",\n                height: \"15vh\",\n                borderRadius: \"10px\"\n              },\n              src: option.imageUrl,\n              alt: \"optionImage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 23\n            }, this), quiz.questionsArray[currentQuestionIndex].optionType === \"TextAndImageUrl\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  width: \"9vw\",\n                  lineHeight: \"15vh\"\n                },\n                children: option.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                style: {\n                  height: \"12vh\",\n                  marginTop: \"1.5vh\",\n                  marginBottom: \"1.5vh\",\n                  borderRadius: \"10px\",\n                  width: \"10vw\",\n                  marginRight: \"1vw\"\n                },\n                src: option.imageUrl,\n                alt: \"optionImage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"2vh\",\n            textAlign: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (quiz.type === \"Poll Type\") {\n                handleNextOrSubmitPoll();\n              } else {\n                handleNextOrSubmitQna();\n              }\n            },\n            style: {\n              color: \"#FFFFFF\",\n              backgroundColor: \"#60B84B\",\n              borderRadius: \"10px\",\n              border: \"none\",\n              paddingTop: \"2vh\",\n              paddingBottom: \"2vh\",\n              width: \"20vw\",\n              fontSize: \"1.3em\",\n              fontWeight: \"600\",\n              marginTop: \"3vh\",\n              marginBottom: \"2vh\",\n              cursor: \"pointer\"\n            },\n            children: currentQuestionIndex < quiz.questionsArray.length - 1 ? \"NEXT\" : \"SUBMIT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n}\n_s(LiveQuizInterface, \"lgGDyKAxupydIEPvodggnJKlEDc=\", false, function () {\n  return [useParams];\n});\n_c = LiveQuizInterface;\nexport default LiveQuizInterface;\nvar _c;\n$RefreshReg$(_c, \"LiveQuizInterface\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","CompletedQuiz","jsxDEV","_jsxDEV","LiveQuizInterface","_s","quizId","quiz","setQuiz","currentQuestionIndex","setCurrentQuestionIndex","quizCompleted","setQuizCompleted","timer","setTimer","timerActive","setTimerActive","correctAnswersCount","setCorrectAnswersCount","selectedOptionIndex","setSelectedOptionIndex","get","then","response","data","catch","error","console","log","impressions","patch","message","handleNextOrSubmitQna","peopleAnsweredCorrectly","peopleAnsweredIncorrectly","questionsArray","length","currentQuestion","correctAnswer","prevCount","prevIndex","_id","handleNextOrSubmitPoll","peopleAnsweredOption1","peopleAnsweredOption2","peopleAnsweredOption3","peopleAnsweredOption4","timerInterval","setInterval","prevTimer","clearInterval","type","Infinity","handleOptionSelect","index","totalQuestions","fileName","_jsxFileName","lineNumber","columnNumber","style","height","width","backgroundColor","display","flexDirection","alignItems","children","margin","borderRadius","boxShadow","marginTop","justifyContent","color","fontWeight","fontSize","marginLeft","marginRight","textAlign","question","flexWrap","optionValues","map","option","onClick","border","cursor","optionType","lineHeight","value","src","imageUrl","alt","marginBottom","paddingTop","paddingBottom","_c","$RefreshReg$"],"sources":["C:/Users/pvnl0/Desktop/Cuvette/Quiz App/quiz-app-frontend/src/components/LiveQuizInterface.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport CompletedQuiz from \"./CompletedQuiz\";\r\n\r\nfunction LiveQuizInterface() {\r\n  const { quizId } = useParams();\r\n\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [quizCompleted, setQuizCompleted] = useState(false);\r\n  const [timer, setTimer] = useState(null);\r\n  const [timerActive, setTimerActive] = useState(false);\r\n\r\n  const [correctAnswersCount, setCorrectAnswersCount] = useState(0);\r\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:4000/getQuizById/${quizId}`)\r\n      .then((response) => {\r\n        const { quiz } = response.data;\r\n        setQuiz(quiz);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [quizId]);\r\n\r\n  let impressions = 0;\r\n\r\n  useEffect(() => {\r\n \r\n    axios\r\n      .patch(`http://localhost:4000/impressionsUpdation/${quizId}`, impressions)\r\n      .then((response) => {\r\n        console.log(response.data.message);\r\n      })\r\n      .catch((error) => {\r\n        if (\r\n          error.response &&\r\n          error.response.data &&\r\n          error.response.data.error\r\n        ) {\r\n          console.log(error);\r\n        }\r\n      });\r\n  });\r\n\r\n  const handleNextOrSubmitQna = () => {\r\n    if (quizCompleted) {\r\n      return;\r\n    }\r\n\r\n    let peopleAnsweredCorrectly = 0;\r\n    let peopleAnsweredIncorrectly = 0;\r\n\r\n    if (currentQuestionIndex < quiz.questionsArray.length - 1) {\r\n      const currentQuestion = quiz.questionsArray[currentQuestionIndex];\r\n\r\n      if (selectedOptionIndex !== null) {\r\n        if (currentQuestion.correctAnswer === selectedOptionIndex) {\r\n          if (!timerActive) {\r\n            setCorrectAnswersCount((prevCount) => prevCount + 1);\r\n            peopleAnsweredCorrectly = 1;\r\n          } else {\r\n            peopleAnsweredIncorrectly = 1;\r\n          }\r\n        } else {\r\n          peopleAnsweredIncorrectly = 1;\r\n        }\r\n      } else {\r\n        peopleAnsweredIncorrectly = 1;\r\n      }\r\n\r\n      setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\r\n    } else {\r\n      if (selectedOptionIndex !== null) {\r\n        const currentQuestion = quiz.questionsArray[currentQuestionIndex];\r\n        if (currentQuestion.correctAnswer === selectedOptionIndex) {\r\n          if (!timerActive) {\r\n            setCorrectAnswersCount((prevCount) => prevCount + 1);\r\n            peopleAnsweredCorrectly = 1;\r\n          } else {\r\n            peopleAnsweredIncorrectly = 1;\r\n          }\r\n        } else {\r\n          peopleAnsweredIncorrectly = 1;\r\n        }\r\n      } else {\r\n        peopleAnsweredIncorrectly = 1;\r\n      }\r\n\r\n      setQuizCompleted(true);\r\n    }\r\n    setSelectedOptionIndex(null);\r\n\r\n    axios\r\n      .patch(\r\n        `http://localhost:4000/questionsUpdation/${quiz._id}/${quiz.questionsArray[currentQuestionIndex]._id}`,\r\n        {\r\n          peopleAnsweredCorrectly,\r\n          peopleAnsweredIncorrectly,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        if (\r\n          error.response &&\r\n          error.response.data &&\r\n          error.response.data.error\r\n        ) {\r\n          console.log(error);\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleNextOrSubmitPoll = () => {\r\n    if (quizCompleted) {\r\n      return;\r\n    }\r\n    let peopleAnsweredOption1 = 0;\r\n    let peopleAnsweredOption2 = 0;\r\n    let peopleAnsweredOption3 = 0;\r\n    let peopleAnsweredOption4 = 0;\r\n    if (selectedOptionIndex === 0) {\r\n      peopleAnsweredOption1 = 1;\r\n    }\r\n    if (selectedOptionIndex === 1) {\r\n      peopleAnsweredOption2 = 1;\r\n    }\r\n    if (selectedOptionIndex === 2) {\r\n      peopleAnsweredOption3 = 1;\r\n    }\r\n    if (selectedOptionIndex === 3) {\r\n      peopleAnsweredOption4 = 1;\r\n    }\r\n    setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\r\n\r\n    axios\r\n      .patch(\r\n        `http://localhost:4000/questionsUpdation/${quiz._id}/${quiz.questionsArray[currentQuestionIndex]._id}`,\r\n        {\r\n          peopleAnsweredOption1,\r\n          peopleAnsweredOption2,\r\n          peopleAnsweredOption3,\r\n          peopleAnsweredOption4,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        if (\r\n          error.response &&\r\n          error.response.data &&\r\n          error.response.data.error\r\n        ) {\r\n          console.log(error);\r\n        }\r\n      });\r\n    setSelectedOptionIndex(null);\r\n    if (currentQuestionIndex === quiz.questionsArray.length - 1) {\r\n      setQuizCompleted(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timerInterval = setInterval(() => {\r\n      setTimer((prevTimer) => {\r\n        if (prevTimer > 0) {\r\n          return prevTimer - 1;\r\n        } else {\r\n          setTimerActive(true);\r\n          handleNextOrSubmitQna();\r\n          return 0;\r\n        }\r\n      });\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(timerInterval);\r\n      setTimerActive(false);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [timer, currentQuestionIndex, quizCompleted]);\r\n\r\n  useEffect(() => {\r\n    if (quiz && quiz.questionsArray && quiz.questionsArray.length > 0) {\r\n      setTimer(\r\n        quiz.timer === \"5 sec\"\r\n          ? 5\r\n          : quiz.timer === \"10 sec\"\r\n          ? 10\r\n          : quiz.timer === \"OFF\" || quiz.type === \"Poll Type\"\r\n          ? Infinity\r\n          : 0\r\n      );\r\n    }\r\n  }, [currentQuestionIndex, quiz]);\r\n\r\n  const handleOptionSelect = (index) => {\r\n    setSelectedOptionIndex(index);\r\n  };\r\n\r\n  if (quizCompleted) {\r\n    return (\r\n      <CompletedQuiz\r\n        type={quiz.type}\r\n        correctAnswer={correctAnswersCount}\r\n        totalQuestions={quiz.questionsArray.length}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100vh\",\r\n        width: \"100vw\",\r\n        backgroundColor: \"#041325\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          height: \"82vh\",\r\n          width: \"90vw\",\r\n          backgroundColor: \"#FFFFFF\",\r\n          margin: \"9vh 5vw\",\r\n          borderRadius: \"15px\",\r\n          boxShadow: \"0px 0px 30px 0px #00000026\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {quiz && quiz.questionsArray && quiz.questionsArray.length > 0 && (\r\n          <div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                marginTop: \"5vh\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <p\r\n                style={{\r\n                  color: \"#474444\",\r\n                  fontWeight: \"600\",\r\n                  fontSize: \"2em\",\r\n                  marginLeft: \"3vw\",\r\n                }}\r\n              >\r\n                0{currentQuestionIndex + 1}/0{quiz.questionsArray.length}\r\n              </p>\r\n\r\n              {quiz.timer !== \"OFF\" && quiz.type !== \"Poll Type\" && (\r\n                <p\r\n                  style={{\r\n                    color: \"#D60000\",\r\n                    fontWeight: \"600\",\r\n                    fontSize: \"2em\",\r\n                    marginRight: \"3vw\",\r\n                  }}\r\n                >\r\n                  00:{timer < 10 ? `0${timer}` : timer}s\r\n                </p>\r\n              )}\r\n            </div>\r\n\r\n            <div style={{ marginTop: \"2vh\", textAlign: \"center\" }}>\r\n              <p\r\n                style={{\r\n                  color: \"#474444\",\r\n                  fontSize: \"2em\",\r\n                  fontWeight: \"600\",\r\n                }}\r\n              >\r\n                {quiz.questionsArray[currentQuestionIndex].question}\r\n              </p>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\",\r\n                width: \"50vw\",\r\n                marginLeft: \"20vw\",\r\n                marginRight: \"20vw\",\r\n                justifyContent: \"space-between\",\r\n                marginTop: \"-3vh\",\r\n              }}\r\n            >\r\n              {quiz.questionsArray[currentQuestionIndex].optionValues.map(\r\n                (option, index) => (\r\n                  <div\r\n                    onClick={() => handleOptionSelect(index)}\r\n                    style={{\r\n                      border:\r\n                        selectedOptionIndex === index\r\n                          ? \"4px solid #5076FF\"\r\n                          : \"\",\r\n                      backgroundColor: \"#F0F0F0\",\r\n                      height: \"15vh\",\r\n                      width: \"20vw\",\r\n                      marginTop: \"10vh\",\r\n                      fontWeight: \"600\",\r\n                      fontSize: \"1.6em\",\r\n                      textAlign: \"center\",\r\n                      cursor: \"pointer\",\r\n                      borderRadius: \"10px\",\r\n                    }}\r\n                  >\r\n                    {quiz.questionsArray[currentQuestionIndex].optionType ===\r\n                      \"Text\" && (\r\n                      <p style={{ lineHeight: \"15vh\" }}> {option.value}</p>\r\n                    )}\r\n\r\n                    {quiz.questionsArray[currentQuestionIndex].optionType ===\r\n                      \"ImageUrl\" && (\r\n                      <img\r\n                        style={{\r\n                          width: \"20vw\",\r\n                          height: \"15vh\",\r\n                          borderRadius: \"10px\",\r\n                        }}\r\n                        src={option.imageUrl}\r\n                        alt=\"optionImage\"\r\n                      />\r\n                    )}\r\n\r\n                    {quiz.questionsArray[currentQuestionIndex].optionType ===\r\n                      \"TextAndImageUrl\" && (\r\n                      <div style={{ display: \"flex\" }}>\r\n                        <p style={{ width: \"9vw\", lineHeight: \"15vh\" }}>\r\n                          {option.value}\r\n                        </p>\r\n                        <img\r\n                          style={{\r\n                            height: \"12vh\",\r\n                            marginTop: \"1.5vh\",\r\n                            marginBottom: \"1.5vh\",\r\n                            borderRadius: \"10px\",\r\n                            width: \"10vw\",\r\n                            marginRight: \"1vw\",\r\n                          }}\r\n                          src={option.imageUrl}\r\n                          alt=\"optionImage\"\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )\r\n              )}\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: \"2vh\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              <button\r\n                onClick={() => {\r\n                  if (quiz.type === \"Poll Type\") {\r\n                    handleNextOrSubmitPoll();\r\n                  } else {\r\n                    handleNextOrSubmitQna();\r\n                  }\r\n                }}\r\n                style={{\r\n                  color: \"#FFFFFF\",\r\n                  backgroundColor: \"#60B84B\",\r\n                  borderRadius: \"10px\",\r\n                  border: \"none\",\r\n                  paddingTop: \"2vh\",\r\n                  paddingBottom: \"2vh\",\r\n                  width: \"20vw\",\r\n                  fontSize: \"1.3em\",\r\n                  fontWeight: \"600\",\r\n                  marginTop: \"3vh\",\r\n                  marginBottom: \"2vh\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                {currentQuestionIndex < quiz.questionsArray.length - 1\r\n                  ? \"NEXT\"\r\n                  : \"SUBMIT\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LiveQuizInterface;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}