{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pvnl0\\\\Desktop\\\\Cuvette\\\\Quiz App\\\\quiz-app-frontend\\\\src\\\\components\\\\AddQuestionsPopup.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport plusicon from \"../images/plusicon.png\";\nimport smallcrossicon from \"../images/smallcrossicon.png\";\nimport EachQuestion from \"./EachQuestion\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddQuestionsPopup({\n  setIsAddQuestionsPopupOpen,\n  setIsQuizPublishedPopupOpen,\n  quizName,\n  quizType,\n  editableQuiz\n}) {\n  _s();\n  const [selectedQuestion, setSelectedQuestion] = useState(1);\n  const [questions, setQuestions] = useState(editableQuiz ? Array.from({\n    length: editableQuiz.questionsArray.length\n  }, (_, index) => index + 1) : [1]);\n  const [error, setError] = useState(\"\");\n  const [questionsArray, setQuestionsArray] = useState(editableQuiz ? editableQuiz.questionsArray.map((question, index) => ({\n    ...question,\n    questionNo: index + 1\n  })) : [{\n    questionNo: 1,\n    question: \"\",\n    optionType: \"\",\n    optionValues: [],\n    correctAnswer: \"\"\n  }]);\n  const [timer, setTimer] = useState(null);\n  const handleTimerChange = newTimer => {\n    setTimer(newTimer, () => {\n      setNewQuiz(prevNewQuiz => ({\n        ...prevNewQuiz,\n        timer: newTimer\n      }));\n    });\n  };\n  const [newQuiz, setNewQuiz] = useState({\n    name: quizName,\n    type: quizType,\n    timer: timer,\n    impressions: 2,\n    questionsArray\n  });\n  const addQuestion = () => {\n    if (questions.length < 5) {\n      const newQuestionNumber = questions.length + 1;\n      const newQuestion = {\n        questionNo: newQuestionNumber,\n        question: \"\",\n        optionType: \"\",\n        optionValues: [],\n        correctAnswer: \"\"\n      };\n      setQuestions([...questions, newQuestionNumber]);\n      setQuestionsArray([...questionsArray, newQuestion]);\n      setSelectedQuestion(newQuestionNumber);\n      setNewQuiz(prevNewQuiz => ({\n        ...prevNewQuiz,\n        questionsArray: [...prevNewQuiz.questionsArray, newQuestion]\n      }));\n    }\n  };\n  const handleQuestionClick = questionNumber => {\n    setSelectedQuestion(questionNumber);\n  };\n  const handleDeleteQuestion = questionNumber => {\n    const remainingQuestions = questions.filter(q => q !== questionNumber);\n    const renumberedQuestions = remainingQuestions.map((_, index) => index + 1);\n    const updatedQuestionsArray = questionsArray.filter(q => q.questionNo !== questionNumber);\n    setQuestions(renumberedQuestions);\n    setQuestionsArray(updatedQuestionsArray);\n    setNewQuiz(prevNewQuiz => ({\n      ...prevNewQuiz,\n      questionsArray: updatedQuestionsArray\n    }));\n  };\n  const handleCancelBtn = () => {\n    setIsAddQuestionsPopupOpen(false);\n  };\n  useEffect(() => {\n    setNewQuiz(prevNewQuiz => ({\n      ...prevNewQuiz,\n      timer: timer\n    }));\n  }, [timer]);\n  const handleCreateQuizBtn = () => {\n    const url = editableQuiz ? `http://localhost:4000/editQuiz/${editableQuiz.id}` : \"http://localhost:4000/quizCreation\";\n    axios.post(url, newQuiz).then(response => {\n      setError(\"\");\n      toast.success(response.data.message);\n      setIsQuizPublishedPopupOpen(true);\n      setIsAddQuestionsPopupOpen(false);\n    }).catch(error => {\n      if (error.response && error.response.data && error.response.data.error) {\n        setError(error.response.data.error);\n      } else {\n        setError(\"An error occurred while log in\");\n      }\n      console.log(error);\n    });\n  };\n  const handleQuestionChange = (questionNumber, newQuestion) => {\n    setQuestionsArray(prevQuestionsArray => {\n      const updatedQuestionsArray = [...prevQuestionsArray];\n      const questionIndex = questionNumber - 1;\n      updatedQuestionsArray[questionIndex] = newQuestion;\n      return updatedQuestionsArray;\n    });\n    setNewQuiz(prevNewQuiz => {\n      const updatedQuestionsArray = [...prevNewQuiz.questionsArray];\n      const questionIndex = questionNumber - 1;\n      updatedQuestionsArray[questionIndex] = newQuestion;\n      return {\n        ...prevNewQuiz,\n        questionsArray: updatedQuestionsArray\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingBottom: \"7vh\",\n      paddingTop: \"4vh\",\n      paddingRight: \"2.5vw\",\n      paddingLeft: \"2.5vw\",\n      marginLeft: \"3vw\",\n      backgroundColor: \"white\",\n      borderRadius: \"10px\",\n      width: \"50vw\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"10vh\",\n        width: \"100%\",\n        display: \"flex\",\n        marginLeft: \"2vw\"\n      },\n      children: [questions.map((questionNumber, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => handleQuestionClick(questionNumber),\n          style: {\n            marginTop: \"1vh\",\n            fontSize: \"1.3em\",\n            color: \"#9F9F9F\",\n            display: \"inline-block\",\n            borderRadius: \"50%\",\n            boxShadow: \"0px 0px 10px 0px #00000026\",\n            width: \"8vh\",\n            height: \"8vh\",\n            textAlign: \"center\",\n            lineHeight: \"8vh\",\n            fontWeight: \"600\",\n            marginRight: \"1.5vw\",\n            cursor: \"pointer\",\n            border: selectedQuestion === questionNumber ? \"2px solid #60B84B\" : \"\"\n          },\n          children: [index + 1, index !== 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: () => handleDeleteQuestion(questionNumber),\n            src: smallcrossicon,\n            alt: \"smallcrossicon\",\n            style: {\n              position: \"absolute\",\n              marginLeft: \"0.5vw\",\n              marginTop: \"0.5vh\",\n              cursor: \"pointer\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), index === questions.length - 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              cursor: \"pointer\"\n            },\n            onClick: addQuestion,\n            src: plusicon,\n            alt: \"plusicon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }, this)]\n      }, questionNumber, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"right\",\n          flex: \"1\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"#9F9F9F\",\n            fontSize: \"1.2em\",\n            lineHeight: \"9vh\",\n            marginRight: \"3vw\",\n            textAlign: \"right\"\n          },\n          children: \"Max 5 questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), questions.map(questionNumber => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(EachQuestion, {\n        questionNumber: questionNumber,\n        selected: selectedQuestion === questionNumber,\n        questionsArray: questionsArray.find(q => q.questionNo === questionNumber),\n        onQuestionChange: newQuestion => handleQuestionChange(questionNumber, newQuestion),\n        quizType: quizType,\n        onTimerChange: handleTimerChange,\n        editableQuiz: editableQuiz\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this)\n    }, questionNumber, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }, this)), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\",\n          textAlign: \"center\",\n          fontSize: \"1.2em\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"6.5vh\",\n        width: \"46vw\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        marginTop: \"4vh\",\n        marginLeft: \"2vw\",\n        marginRight: \"2vw\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancelBtn,\n        style: {\n          color: \"#474444\",\n          boxShadow: \"0px 0px 15px 0px #00000040\",\n          background: \"none\",\n          fontWeight: \"600\",\n          fontSize: \"1.2em\",\n          width: \"17vw\",\n          borderRadius: \"10px\",\n          paddingTop: \"1vh\",\n          paddingBottom: \"1vh\",\n          border: \"none\",\n          cursor: \"pointer\"\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateQuizBtn,\n        style: {\n          color: \"#FFFFFF\",\n          backgroundColor: \"#60B84B\",\n          fontWeight: \"600\",\n          fontSize: \"1.2em\",\n          width: \"17vw\",\n          borderRadius: \"10px\",\n          paddingTop: \"1vh\",\n          paddingBottom: \"1vh\",\n          border: \"none\",\n          cursor: \"pointer\"\n        },\n        children: \"Create Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_s(AddQuestionsPopup, \"0qY5luZa9xD9GTxsAs5K82BbYEE=\");\n_c = AddQuestionsPopup;\nexport default AddQuestionsPopup;\nvar _c;\n$RefreshReg$(_c, \"AddQuestionsPopup\");","map":{"version":3,"names":["React","useEffect","useState","plusicon","smallcrossicon","EachQuestion","axios","toast","jsxDEV","_jsxDEV","AddQuestionsPopup","setIsAddQuestionsPopupOpen","setIsQuizPublishedPopupOpen","quizName","quizType","editableQuiz","_s","selectedQuestion","setSelectedQuestion","questions","setQuestions","Array","from","length","questionsArray","_","index","error","setError","setQuestionsArray","map","question","questionNo","optionType","optionValues","correctAnswer","timer","setTimer","handleTimerChange","newTimer","setNewQuiz","prevNewQuiz","newQuiz","name","type","impressions","addQuestion","newQuestionNumber","newQuestion","handleQuestionClick","questionNumber","handleDeleteQuestion","remainingQuestions","filter","q","renumberedQuestions","updatedQuestionsArray","handleCancelBtn","handleCreateQuizBtn","url","id","post","then","response","success","data","message","catch","console","log","handleQuestionChange","prevQuestionsArray","questionIndex","style","paddingBottom","paddingTop","paddingRight","paddingLeft","marginLeft","backgroundColor","borderRadius","width","children","height","display","position","onClick","marginTop","fontSize","color","boxShadow","textAlign","lineHeight","fontWeight","marginRight","cursor","border","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","flex","selected","find","onQuestionChange","onTimerChange","justifyContent","background","_c","$RefreshReg$"],"sources":["C:/Users/pvnl0/Desktop/Cuvette/Quiz App/quiz-app-frontend/src/components/AddQuestionsPopup.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport plusicon from \"../images/plusicon.png\";\r\nimport smallcrossicon from \"../images/smallcrossicon.png\";\r\nimport EachQuestion from \"./EachQuestion\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction AddQuestionsPopup({\r\n  setIsAddQuestionsPopupOpen,\r\n  setIsQuizPublishedPopupOpen,\r\n  quizName,\r\n  quizType,\r\n  editableQuiz,\r\n}) {\r\n  const [selectedQuestion, setSelectedQuestion] = useState(1);\r\n\r\n  const [questions, setQuestions] = useState(\r\n    editableQuiz\r\n      ? Array.from(\r\n          { length: editableQuiz.questionsArray.length },\r\n          (_, index) => index + 1\r\n        )\r\n      : [1]\r\n  );\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const [questionsArray, setQuestionsArray] = useState(\r\n    editableQuiz\r\n      ? editableQuiz.questionsArray.map((question, index) => ({\r\n          ...question,\r\n          questionNo: index + 1,\r\n        }))\r\n      : [\r\n          {\r\n            questionNo: 1,\r\n            question: \"\",\r\n            optionType: \"\",\r\n            optionValues: [],\r\n            correctAnswer: \"\",\r\n          },\r\n        ]\r\n  );\r\n\r\n  const [timer, setTimer] = useState(null);\r\n\r\n  const handleTimerChange = (newTimer) => {\r\n    setTimer(newTimer, () => {\r\n      setNewQuiz((prevNewQuiz) => ({\r\n        ...prevNewQuiz,\r\n        timer: newTimer,\r\n      }));\r\n    });\r\n  };\r\n\r\n  const [newQuiz, setNewQuiz] = useState({\r\n    name: quizName,\r\n    type: quizType,\r\n    timer: timer,\r\n    impressions: 2,\r\n    questionsArray,\r\n  });\r\n\r\n  const addQuestion = () => {\r\n    if (questions.length < 5) {\r\n      const newQuestionNumber = questions.length + 1;\r\n\r\n      const newQuestion = {\r\n        questionNo: newQuestionNumber,\r\n        question: \"\",\r\n        optionType: \"\",\r\n        optionValues: [],\r\n        correctAnswer: \"\",\r\n      };\r\n\r\n      setQuestions([...questions, newQuestionNumber]);\r\n      setQuestionsArray([...questionsArray, newQuestion]);\r\n      setSelectedQuestion(newQuestionNumber);\r\n\r\n      setNewQuiz((prevNewQuiz) => ({\r\n        ...prevNewQuiz,\r\n        questionsArray: [...prevNewQuiz.questionsArray, newQuestion],\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleQuestionClick = (questionNumber) => {\r\n    setSelectedQuestion(questionNumber);\r\n  };\r\n\r\n  const handleDeleteQuestion = (questionNumber) => {\r\n    const remainingQuestions = questions.filter((q) => q !== questionNumber);\r\n\r\n    const renumberedQuestions = remainingQuestions.map((_, index) => index + 1);\r\n\r\n    const updatedQuestionsArray = questionsArray.filter(\r\n      (q) => q.questionNo !== questionNumber\r\n    );\r\n\r\n    setQuestions(renumberedQuestions);\r\n    setQuestionsArray(updatedQuestionsArray);\r\n\r\n    setNewQuiz((prevNewQuiz) => ({\r\n      ...prevNewQuiz,\r\n      questionsArray: updatedQuestionsArray,\r\n    }));\r\n  };\r\n\r\n  const handleCancelBtn = () => {\r\n    setIsAddQuestionsPopupOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setNewQuiz((prevNewQuiz) => ({\r\n      ...prevNewQuiz,\r\n      timer: timer,\r\n    }));\r\n  }, [timer]);\r\n\r\n  const handleCreateQuizBtn = () => {\r\n    const url = editableQuiz\r\n      ? `http://localhost:4000/editQuiz/${editableQuiz.id}`\r\n      : \"http://localhost:4000/quizCreation\";\r\n\r\n    axios\r\n      .post(url, newQuiz)\r\n      .then((response) => {\r\n        setError(\"\");\r\n        toast.success(response.data.message);\r\n        setIsQuizPublishedPopupOpen(true);\r\n        setIsAddQuestionsPopupOpen(false);\r\n      })\r\n      .catch((error) => {\r\n        if (\r\n          error.response &&\r\n          error.response.data &&\r\n          error.response.data.error\r\n        ) {\r\n          setError(error.response.data.error);\r\n        } else {\r\n          setError(\"An error occurred while log in\");\r\n        }\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleQuestionChange = (questionNumber, newQuestion) => {\r\n    setQuestionsArray((prevQuestionsArray) => {\r\n      const updatedQuestionsArray = [...prevQuestionsArray];\r\n      const questionIndex = questionNumber - 1;\r\n      updatedQuestionsArray[questionIndex] = newQuestion;\r\n      return updatedQuestionsArray;\r\n    });\r\n\r\n    setNewQuiz((prevNewQuiz) => {\r\n      const updatedQuestionsArray = [...prevNewQuiz.questionsArray];\r\n      const questionIndex = questionNumber - 1;\r\n      updatedQuestionsArray[questionIndex] = newQuestion;\r\n\r\n      return {\r\n        ...prevNewQuiz,\r\n        questionsArray: updatedQuestionsArray,\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        paddingBottom: \"7vh\",\r\n        paddingTop: \"4vh\",\r\n        paddingRight: \"2.5vw\",\r\n        paddingLeft: \"2.5vw\",\r\n        marginLeft: \"3vw\",\r\n        backgroundColor: \"white\",\r\n        borderRadius: \"10px\",\r\n        width: \"50vw\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          height: \"10vh\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          marginLeft: \"2vw\",\r\n        }}\r\n      >\r\n        {questions.map((questionNumber, index) => (\r\n          <div key={questionNumber} style={{ position: \"relative\" }}>\r\n            <p\r\n              onClick={() => handleQuestionClick(questionNumber)}\r\n              style={{\r\n                marginTop: \"1vh\",\r\n                fontSize: \"1.3em\",\r\n                color: \"#9F9F9F\",\r\n                display: \"inline-block\",\r\n                borderRadius: \"50%\",\r\n                boxShadow: \"0px 0px 10px 0px #00000026\",\r\n                width: \"8vh\",\r\n                height: \"8vh\",\r\n                textAlign: \"center\",\r\n                lineHeight: \"8vh\",\r\n                fontWeight: \"600\",\r\n                marginRight: \"1.5vw\",\r\n                cursor: \"pointer\",\r\n                border:\r\n                  selectedQuestion === questionNumber\r\n                    ? \"2px solid #60B84B\"\r\n                    : \"\",\r\n              }}\r\n            >\r\n              {index + 1}\r\n              {index !== 0 && (\r\n                <img\r\n                  onClick={() => handleDeleteQuestion(questionNumber)}\r\n                  src={smallcrossicon}\r\n                  alt=\"smallcrossicon\"\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    marginLeft: \"0.5vw\",\r\n                    marginTop: \"0.5vh\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                />\r\n              )}\r\n            </p>\r\n            {index === questions.length - 1 && (\r\n              <span>\r\n                <img\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={addQuestion}\r\n                  src={plusicon}\r\n                  alt=\"plusicon\"\r\n                />\r\n              </span>\r\n            )}\r\n          </div>\r\n        ))}\r\n\r\n        <div style={{ textAlign: \"right\", flex: \"1\" }}>\r\n          <p\r\n            style={{\r\n              color: \"#9F9F9F\",\r\n              fontSize: \"1.2em\",\r\n              lineHeight: \"9vh\",\r\n              marginRight: \"3vw\",\r\n              textAlign: \"right\",\r\n            }}\r\n          >\r\n            Max 5 questions\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* EachQuestion component */}\r\n\r\n      {questions.map((questionNumber) => (\r\n        <div key={questionNumber}>\r\n          <EachQuestion\r\n            questionNumber={questionNumber}\r\n            selected={selectedQuestion === questionNumber}\r\n            questionsArray={questionsArray.find(\r\n              (q) => q.questionNo === questionNumber\r\n            )}\r\n            onQuestionChange={(newQuestion) =>\r\n              handleQuestionChange(questionNumber, newQuestion)\r\n            }\r\n            quizType={quizType}\r\n            onTimerChange={handleTimerChange}\r\n            editableQuiz={editableQuiz}\r\n          />\r\n        </div>\r\n      ))}\r\n\r\n      {error && (\r\n        <div>\r\n          <p style={{ color: \"red\", textAlign: \"center\", fontSize: \"1.2em\" }}>\r\n            {error}\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      <div\r\n        style={{\r\n          height: \"6.5vh\",\r\n          width: \"46vw\",\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          marginTop: \"4vh\",\r\n          marginLeft: \"2vw\",\r\n          marginRight: \"2vw\",\r\n        }}\r\n      >\r\n        <button\r\n          onClick={handleCancelBtn}\r\n          style={{\r\n            color: \"#474444\",\r\n            boxShadow: \"0px 0px 15px 0px #00000040\",\r\n            background: \"none\",\r\n            fontWeight: \"600\",\r\n            fontSize: \"1.2em\",\r\n            width: \"17vw\",\r\n            borderRadius: \"10px\",\r\n            paddingTop: \"1vh\",\r\n            paddingBottom: \"1vh\",\r\n            border: \"none\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          onClick={handleCreateQuizBtn}\r\n          style={{\r\n            color: \"#FFFFFF\",\r\n            backgroundColor: \"#60B84B\",\r\n            fontWeight: \"600\",\r\n            fontSize: \"1.2em\",\r\n            width: \"17vw\",\r\n            borderRadius: \"10px\",\r\n            paddingTop: \"1vh\",\r\n            paddingBottom: \"1vh\",\r\n            border: \"none\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Create Quiz\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddQuestionsPopup;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,iBAAiBA,CAAC;EACzBC,0BAA0B;EAC1BC,2BAA2B;EAC3BC,QAAQ;EACRC,QAAQ;EACRC;AACF,CAAC,EAAE;EAAAC,EAAA;EACD,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAE3D,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CACxCa,YAAY,GACRM,KAAK,CAACC,IAAI,CACR;IAAEC,MAAM,EAAER,YAAY,CAACS,cAAc,CAACD;EAAO,CAAC,EAC9C,CAACE,CAAC,EAAEC,KAAK,KAAKA,KAAK,GAAG,CACxB,CAAC,GACD,CAAC,CAAC,CACR,CAAC;EAED,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM,CAACsB,cAAc,EAAEK,iBAAiB,CAAC,GAAG3B,QAAQ,CAClDa,YAAY,GACRA,YAAY,CAACS,cAAc,CAACM,GAAG,CAAC,CAACC,QAAQ,EAAEL,KAAK,MAAM;IACpD,GAAGK,QAAQ;IACXC,UAAU,EAAEN,KAAK,GAAG;EACtB,CAAC,CAAC,CAAC,GACH,CACE;IACEM,UAAU,EAAE,CAAC;IACbD,QAAQ,EAAE,EAAE;IACZE,UAAU,EAAE,EAAE;IACdC,YAAY,EAAE,EAAE;IAChBC,aAAa,EAAE;EACjB,CAAC,CAET,CAAC;EAED,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGnC,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMoC,iBAAiB,GAAIC,QAAQ,IAAK;IACtCF,QAAQ,CAACE,QAAQ,EAAE,MAAM;MACvBC,UAAU,CAAEC,WAAW,KAAM;QAC3B,GAAGA,WAAW;QACdL,KAAK,EAAEG;MACT,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;EACJ,CAAC;EAED,MAAM,CAACG,OAAO,EAAEF,UAAU,CAAC,GAAGtC,QAAQ,CAAC;IACrCyC,IAAI,EAAE9B,QAAQ;IACd+B,IAAI,EAAE9B,QAAQ;IACdsB,KAAK,EAAEA,KAAK;IACZS,WAAW,EAAE,CAAC;IACdrB;EACF,CAAC,CAAC;EAEF,MAAMsB,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI3B,SAAS,CAACI,MAAM,GAAG,CAAC,EAAE;MACxB,MAAMwB,iBAAiB,GAAG5B,SAAS,CAACI,MAAM,GAAG,CAAC;MAE9C,MAAMyB,WAAW,GAAG;QAClBhB,UAAU,EAAEe,iBAAiB;QAC7BhB,QAAQ,EAAE,EAAE;QACZE,UAAU,EAAE,EAAE;QACdC,YAAY,EAAE,EAAE;QAChBC,aAAa,EAAE;MACjB,CAAC;MAEDf,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAE4B,iBAAiB,CAAC,CAAC;MAC/ClB,iBAAiB,CAAC,CAAC,GAAGL,cAAc,EAAEwB,WAAW,CAAC,CAAC;MACnD9B,mBAAmB,CAAC6B,iBAAiB,CAAC;MAEtCP,UAAU,CAAEC,WAAW,KAAM;QAC3B,GAAGA,WAAW;QACdjB,cAAc,EAAE,CAAC,GAAGiB,WAAW,CAACjB,cAAc,EAAEwB,WAAW;MAC7D,CAAC,CAAC,CAAC;IACL;EACF,CAAC;EAED,MAAMC,mBAAmB,GAAIC,cAAc,IAAK;IAC9ChC,mBAAmB,CAACgC,cAAc,CAAC;EACrC,CAAC;EAED,MAAMC,oBAAoB,GAAID,cAAc,IAAK;IAC/C,MAAME,kBAAkB,GAAGjC,SAAS,CAACkC,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKJ,cAAc,CAAC;IAExE,MAAMK,mBAAmB,GAAGH,kBAAkB,CAACtB,GAAG,CAAC,CAACL,CAAC,EAAEC,KAAK,KAAKA,KAAK,GAAG,CAAC,CAAC;IAE3E,MAAM8B,qBAAqB,GAAGhC,cAAc,CAAC6B,MAAM,CAChDC,CAAC,IAAKA,CAAC,CAACtB,UAAU,KAAKkB,cAC1B,CAAC;IAED9B,YAAY,CAACmC,mBAAmB,CAAC;IACjC1B,iBAAiB,CAAC2B,qBAAqB,CAAC;IAExChB,UAAU,CAAEC,WAAW,KAAM;MAC3B,GAAGA,WAAW;MACdjB,cAAc,EAAEgC;IAClB,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B9C,0BAA0B,CAAC,KAAK,CAAC;EACnC,CAAC;EAEDV,SAAS,CAAC,MAAM;IACduC,UAAU,CAAEC,WAAW,KAAM;MAC3B,GAAGA,WAAW;MACdL,KAAK,EAAEA;IACT,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMsB,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMC,GAAG,GAAG5C,YAAY,GACnB,kCAAiCA,YAAY,CAAC6C,EAAG,EAAC,GACnD,oCAAoC;IAExCtD,KAAK,CACFuD,IAAI,CAACF,GAAG,EAAEjB,OAAO,CAAC,CAClBoB,IAAI,CAAEC,QAAQ,IAAK;MAClBnC,QAAQ,CAAC,EAAE,CAAC;MACZrB,KAAK,CAACyD,OAAO,CAACD,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC;MACpCtD,2BAA2B,CAAC,IAAI,CAAC;MACjCD,0BAA0B,CAAC,KAAK,CAAC;IACnC,CAAC,CAAC,CACDwD,KAAK,CAAExC,KAAK,IAAK;MAChB,IACEA,KAAK,CAACoC,QAAQ,IACdpC,KAAK,CAACoC,QAAQ,CAACE,IAAI,IACnBtC,KAAK,CAACoC,QAAQ,CAACE,IAAI,CAACtC,KAAK,EACzB;QACAC,QAAQ,CAACD,KAAK,CAACoC,QAAQ,CAACE,IAAI,CAACtC,KAAK,CAAC;MACrC,CAAC,MAAM;QACLC,QAAQ,CAAC,gCAAgC,CAAC;MAC5C;MACAwC,OAAO,CAACC,GAAG,CAAC1C,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC;EAED,MAAM2C,oBAAoB,GAAGA,CAACpB,cAAc,EAAEF,WAAW,KAAK;IAC5DnB,iBAAiB,CAAE0C,kBAAkB,IAAK;MACxC,MAAMf,qBAAqB,GAAG,CAAC,GAAGe,kBAAkB,CAAC;MACrD,MAAMC,aAAa,GAAGtB,cAAc,GAAG,CAAC;MACxCM,qBAAqB,CAACgB,aAAa,CAAC,GAAGxB,WAAW;MAClD,OAAOQ,qBAAqB;IAC9B,CAAC,CAAC;IAEFhB,UAAU,CAAEC,WAAW,IAAK;MAC1B,MAAMe,qBAAqB,GAAG,CAAC,GAAGf,WAAW,CAACjB,cAAc,CAAC;MAC7D,MAAMgD,aAAa,GAAGtB,cAAc,GAAG,CAAC;MACxCM,qBAAqB,CAACgB,aAAa,CAAC,GAAGxB,WAAW;MAElD,OAAO;QACL,GAAGP,WAAW;QACdjB,cAAc,EAAEgC;MAClB,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,oBACE/C,OAAA;IACEgE,KAAK,EAAE;MACLC,aAAa,EAAE,KAAK;MACpBC,UAAU,EAAE,KAAK;MACjBC,YAAY,EAAE,OAAO;MACrBC,WAAW,EAAE,OAAO;MACpBC,UAAU,EAAE,KAAK;MACjBC,eAAe,EAAE,OAAO;MACxBC,YAAY,EAAE,MAAM;MACpBC,KAAK,EAAE;IACT,CAAE;IAAAC,QAAA,gBAEFzE,OAAA;MACEgE,KAAK,EAAE;QACLU,MAAM,EAAE,MAAM;QACdF,KAAK,EAAE,MAAM;QACbG,OAAO,EAAE,MAAM;QACfN,UAAU,EAAE;MACd,CAAE;MAAAI,QAAA,GAED/D,SAAS,CAACW,GAAG,CAAC,CAACoB,cAAc,EAAExB,KAAK,kBACnCjB,OAAA;QAA0BgE,KAAK,EAAE;UAAEY,QAAQ,EAAE;QAAW,CAAE;QAAAH,QAAA,gBACxDzE,OAAA;UACE6E,OAAO,EAAEA,CAAA,KAAMrC,mBAAmB,CAACC,cAAc,CAAE;UACnDuB,KAAK,EAAE;YACLc,SAAS,EAAE,KAAK;YAChBC,QAAQ,EAAE,OAAO;YACjBC,KAAK,EAAE,SAAS;YAChBL,OAAO,EAAE,cAAc;YACvBJ,YAAY,EAAE,KAAK;YACnBU,SAAS,EAAE,4BAA4B;YACvCT,KAAK,EAAE,KAAK;YACZE,MAAM,EAAE,KAAK;YACbQ,SAAS,EAAE,QAAQ;YACnBC,UAAU,EAAE,KAAK;YACjBC,UAAU,EAAE,KAAK;YACjBC,WAAW,EAAE,OAAO;YACpBC,MAAM,EAAE,SAAS;YACjBC,MAAM,EACJ/E,gBAAgB,KAAKiC,cAAc,GAC/B,mBAAmB,GACnB;UACR,CAAE;UAAAgC,QAAA,GAEDxD,KAAK,GAAG,CAAC,EACTA,KAAK,KAAK,CAAC,iBACVjB,OAAA;YACE6E,OAAO,EAAEA,CAAA,KAAMnC,oBAAoB,CAACD,cAAc,CAAE;YACpD+C,GAAG,EAAE7F,cAAe;YACpB8F,GAAG,EAAC,gBAAgB;YACpBzB,KAAK,EAAE;cACLY,QAAQ,EAAE,UAAU;cACpBP,UAAU,EAAE,OAAO;cACnBS,SAAS,EAAE,OAAO;cAClBQ,MAAM,EAAE;YACV;UAAE;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACF;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,EACH5E,KAAK,KAAKP,SAAS,CAACI,MAAM,GAAG,CAAC,iBAC7Bd,OAAA;UAAAyE,QAAA,eACEzE,OAAA;YACEgE,KAAK,EAAE;cAAEsB,MAAM,EAAE;YAAU,CAAE;YAC7BT,OAAO,EAAExC,WAAY;YACrBmD,GAAG,EAAE9F,QAAS;YACd+F,GAAG,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CACP;MAAA,GA/COpD,cAAc;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAgDnB,CACN,CAAC,eAEF7F,OAAA;QAAKgE,KAAK,EAAE;UAAEkB,SAAS,EAAE,OAAO;UAAEY,IAAI,EAAE;QAAI,CAAE;QAAArB,QAAA,eAC5CzE,OAAA;UACEgE,KAAK,EAAE;YACLgB,KAAK,EAAE,SAAS;YAChBD,QAAQ,EAAE,OAAO;YACjBI,UAAU,EAAE,KAAK;YACjBE,WAAW,EAAE,KAAK;YAClBH,SAAS,EAAE;UACb,CAAE;UAAAT,QAAA,EACH;QAED;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAILnF,SAAS,CAACW,GAAG,CAAEoB,cAAc,iBAC5BzC,OAAA;MAAAyE,QAAA,eACEzE,OAAA,CAACJ,YAAY;QACX6C,cAAc,EAAEA,cAAe;QAC/BsD,QAAQ,EAAEvF,gBAAgB,KAAKiC,cAAe;QAC9C1B,cAAc,EAAEA,cAAc,CAACiF,IAAI,CAChCnD,CAAC,IAAKA,CAAC,CAACtB,UAAU,KAAKkB,cAC1B,CAAE;QACFwD,gBAAgB,EAAG1D,WAAW,IAC5BsB,oBAAoB,CAACpB,cAAc,EAAEF,WAAW,CACjD;QACDlC,QAAQ,EAAEA,QAAS;QACnB6F,aAAa,EAAErE,iBAAkB;QACjCvB,YAAY,EAAEA;MAAa;QAAAoF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B;IAAC,GAbMpD,cAAc;MAAAiD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAcnB,CACN,CAAC,EAED3E,KAAK,iBACJlB,OAAA;MAAAyE,QAAA,eACEzE,OAAA;QAAGgE,KAAK,EAAE;UAAEgB,KAAK,EAAE,KAAK;UAAEE,SAAS,EAAE,QAAQ;UAAEH,QAAQ,EAAE;QAAQ,CAAE;QAAAN,QAAA,EAChEvD;MAAK;QAAAwE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACN,eAED7F,OAAA;MACEgE,KAAK,EAAE;QACLU,MAAM,EAAE,OAAO;QACfF,KAAK,EAAE,MAAM;QACbG,OAAO,EAAE,MAAM;QACfwB,cAAc,EAAE,eAAe;QAC/BrB,SAAS,EAAE,KAAK;QAChBT,UAAU,EAAE,KAAK;QACjBgB,WAAW,EAAE;MACf,CAAE;MAAAZ,QAAA,gBAEFzE,OAAA;QACE6E,OAAO,EAAE7B,eAAgB;QACzBgB,KAAK,EAAE;UACLgB,KAAK,EAAE,SAAS;UAChBC,SAAS,EAAE,4BAA4B;UACvCmB,UAAU,EAAE,MAAM;UAClBhB,UAAU,EAAE,KAAK;UACjBL,QAAQ,EAAE,OAAO;UACjBP,KAAK,EAAE,MAAM;UACbD,YAAY,EAAE,MAAM;UACpBL,UAAU,EAAE,KAAK;UACjBD,aAAa,EAAE,KAAK;UACpBsB,MAAM,EAAE,MAAM;UACdD,MAAM,EAAE;QACV,CAAE;QAAAb,QAAA,EACH;MAED;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT7F,OAAA;QACE6E,OAAO,EAAE5B,mBAAoB;QAC7Be,KAAK,EAAE;UACLgB,KAAK,EAAE,SAAS;UAChBV,eAAe,EAAE,SAAS;UAC1Bc,UAAU,EAAE,KAAK;UACjBL,QAAQ,EAAE,OAAO;UACjBP,KAAK,EAAE,MAAM;UACbD,YAAY,EAAE,MAAM;UACpBL,UAAU,EAAE,KAAK;UACjBD,aAAa,EAAE,KAAK;UACpBsB,MAAM,EAAE,MAAM;UACdD,MAAM,EAAE;QACV,CAAE;QAAAb,QAAA,EACH;MAED;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtF,EAAA,CApUQN,iBAAiB;AAAAoG,EAAA,GAAjBpG,iBAAiB;AAsU1B,eAAeA,iBAAiB;AAAC,IAAAoG,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}